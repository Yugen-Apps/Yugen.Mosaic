<Page
    x:Class="Yugen.Mosaic.Uwp.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Yugen.Toolkit.Uwp.Controls.UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:Yugen.Mosaic.Uwp.Models"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:validation="using:Yugen.Toolkit.Uwp.Controls.Validation"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    Loaded="OnPageLoaded"
    mc:Ignorable="d">

    <Grid>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  title bar  -->
            <Grid Grid.ColumnSpan="3" Background="Transparent">
                <TextBlock
                    x:Uid="MainTitleTextBlock"
                    Padding="12,8"
                    Style="{StaticResource YugenBaseTextBlockStyle}" />
            </Grid>

            <!--  left toolbar  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="0"
                Width="260"
                Padding="12"
                Spacing="8">

                <TextBlock x:Uid="MainMasterImageTextBlock" Style="{StaticResource YugenCaptionTextBlockStyle}" />

                <Border>

                    <Grid
                        x:Name="MasterImageGrid"
                        Width="230"
                        Height="230"
                        ui:FrameworkElementExtensions.Cursor="Hand"
                        CornerRadius="4">
                        <interactivity:Interaction.Behaviors>
                            <interactivity:EventTriggerBehavior EventName="Tapped">
                                <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.AddMasterImageCommand}" />
                            </interactivity:EventTriggerBehavior>
                            <interactivity:EventTriggerBehavior EventName="PointerEntered">
                                <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.PointerEnteredCommand}" />
                            </interactivity:EventTriggerBehavior>
                            <interactivity:EventTriggerBehavior EventName="PointerExited">
                                <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.PointerExitedCommand}" />
                            </interactivity:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>

                        <Grid.Background>
                            <ImageBrush ImageSource="{x:Bind ViewModel.MasterBpmSource, Mode=OneWay}" Stretch="Uniform" />
                        </Grid.Background>

                        <Grid
                            x:Name="AddMasterUI"
                            Background="{ThemeResource SolidBackgroundFillColorQuarternaryBrush}"
                            CornerRadius="2"
                            Visibility="{x:Bind ViewModel.IsAddMasterUIVisible, Mode=OneWay}">

                            <StackPanel
                                Margin="24"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Spacing="8">
                                <FontIcon FontSize="32" Glyph="&#xEB9F;" />
                                <TextBlock
                                    x:Uid="MainAddMasterTextBlock"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWholeWords" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>

                <TextBlock x:Uid="MainTilesListTextBlock" Style="{StaticResource YugenCaptionTextBlockStyle}" />

                <StackPanel Spacing="8">
                    <Button
                        x:Name="AddTilesButton"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind ViewModel.AddTilesCommand}"
                        IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <FontIcon Glyph="&#xECC8;" />
                            <TextBlock x:Uid="MainAddTilesTextBlock" />
                        </StackPanel>
                    </Button>

                    <Button
                        x:Name="AddTilesFolderButton"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind ViewModel.AddTilesFolderCommand}"
                        IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <FontIcon Glyph="&#xECC8;" />
                            <TextBlock x:Uid="MainAddTilesFolderTextBlock" />
                        </StackPanel>
                    </Button>
                </StackPanel>

                <toolkitControls:AdaptiveGridView
                    Grid.Row="2"
                    DesiredWidth="120"
                    IsItemClickEnabled="True"
                    ItemClickCommand="{x:Bind ViewModel.ClickTileCommand}"
                    ItemsSource="{x:Bind ViewModel.TileBmpCollection, Mode=OneWay}"
                    StretchContentForSingleRow="False">

                    <toolkitControls:AdaptiveGridView.ItemTemplate>
                        <DataTemplate x:DataType="models:TileBmp">
                            <Border CornerRadius="4">
                                <Grid>
                                    <Image
                                        Height="80"
                                        VerticalAlignment="Top"
                                        Source="{x:Bind Image}"
                                        Stretch="UniformToFill" />
                                    <Border VerticalAlignment="Bottom" Background="{ThemeResource AppTransparentBackgroundBrush}">
                                        <TextBlock
                                            Padding="2"
                                            MaxLines="1"
                                            Style="{ThemeResource CaptionTextBlockStyle}"
                                            Text="{x:Bind Name}"
                                            TextTrimming="CharacterEllipsis"
                                            ToolTipService.ToolTip="{x:Bind Name}" />
                                    </Border>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </toolkitControls:AdaptiveGridView.ItemTemplate>
                </toolkitControls:AdaptiveGridView>
            </StackPanel>

            <!--  main canvas  -->
            <Border
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,20,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{ThemeResource SolidBackgroundFillColorQuarternaryBrush}"
                CornerRadius="8,8,0,0">

                <Viewbox
                    Margin="20"
                    Stretch="Uniform"
                    StretchDirection="Both">

                    <Grid>
                        <Border
                            Width="{x:Bind ViewModel.OutputWidth, Mode=OneWay}"
                            Height="{x:Bind ViewModel.OutputHeight, Mode=OneWay}"
                            BorderBrush="{ThemeResource AppBorderBrush}"
                            BorderThickness="1">

                            <Image Source="{x:Bind ViewModel.OutputBmpSource, Mode=OneWay}" Stretch="Uniform" />
                        </Border>

                        <controls:AlignmentGrid
                            ContainerHeight="{x:Bind ViewModel.OutputHeight, Mode=OneWay}"
                            ContainerWidth="{x:Bind ViewModel.OutputWidth, Mode=OneWay}"
                            HorizontalStep="{x:Bind ViewModel.TileWidth, Mode=OneWay}"
                            LineBrush="{ThemeResource TextBoxButtonForegroundThemeBrush}"
                            Opacity="0.3"
                            VerticalStep="{x:Bind ViewModel.TileHeight, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.IsAlignmentGridVisibile, Mode=OneWay}" />
                    </Grid>
                </Viewbox>
            </Border>

            <!--  right toolbar  -->
            <Grid
                Grid.Row="1"
                Grid.Column="2"
                Width="260"
                Padding="12">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <validation:ValidatingForm x:Name="ValidatingForm">

                    <StackPanel Spacing="12">

                        <TextBlock x:Uid="MainTileProperties" Style="{StaticResource YugenCaptionTextBlockStyle}" />

                        <Grid x:Name="TilePropertiesGrid">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                x:Uid="MainWidthTextBlock"
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource YugenCaptionTextBlockStyle}" />

                            <validation:ValidatingTextBox
                                Grid.Column="1"
                                IsMandatory="True"
                                IsRealTimeValidationEnabled="True"
                                MandatoryValidationMessage=""
                                Text="{x:Bind ViewModel.TileWidth, Mode=TwoWay}"
                                ValidationRules="{StaticResource IntValidationRule}" />

                            <TextBlock
                                x:Uid="MainHeightTextBlock"
                                Grid.Column="2"
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource YugenCaptionTextBlockStyle}" />

                            <validation:ValidatingTextBox
                                Grid.Column="3"
                                IsMandatory="True"
                                IsRealTimeValidationEnabled="True"
                                MandatoryValidationMessage=""
                                Text="{x:Bind ViewModel.TileHeight, Mode=TwoWay}"
                                ValidationRules="{StaticResource IntValidationRule}" />
                        </Grid>

                        <Rectangle
                            Height=".5"
                            Margin="0,16,0,0"
                            Fill="{ThemeResource AppBorderBrush}" />

                        <TextBlock x:Uid="MainMosaicTypeTextBlock" Style="{StaticResource YugenCaptionTextBlockStyle}" />

                        <ComboBox
                            x:Name="MosaicTypeComboBox"
                            Margin="24,0,0,0"
                            HorizontalAlignment="Stretch"
                            ItemsSource="{x:Bind ViewModel.MosaicTypeList, Mode=OneWay}"
                            SelectedItem="{x:Bind ViewModel.SelectedMosaicType, Mode=TwoWay}" />

                        <Rectangle
                            Height=".5"
                            Margin="0,16,0,0"
                            Fill="{ThemeResource AppBorderBrush}" />

                        <TextBlock x:Uid="MainOutputPropertiesTextBlock" Style="{StaticResource YugenCaptionTextBlockStyle}" />

                        <Grid x:Name="OutputPropertiesGrid">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                x:Uid="MainWidthTextBlock"
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource YugenCaptionTextBlockStyle}" />

                            <validation:ValidatingTextBox
                                Grid.Column="1"
                                IsMandatory="True"
                                IsRealTimeValidationEnabled="True"
                                MandatoryValidationMessage=""
                                Text="{x:Bind ViewModel.OutputWidth, Mode=TwoWay}"
                                ValidationRules="{StaticResource IntValidationRule}" />

                            <TextBlock
                                x:Uid="MainHeightTextBlock"
                                Grid.Column="2"
                                Margin="4,0,4,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource YugenCaptionTextBlockStyle}" />

                            <validation:ValidatingTextBox
                                Grid.Column="3"
                                IsMandatory="True"
                                IsRealTimeValidationEnabled="True"
                                MandatoryValidationMessage=""
                                Text="{x:Bind ViewModel.OutputHeight, Mode=TwoWay}"
                                ValidationRules="{StaticResource IntValidationRule}" />
                        </Grid>

                        <Rectangle
                            Height=".5"
                            Margin="0,16,0,0"
                            Fill="{ThemeResource AppBorderBrush}" />

                        <validation:ValidatingButton
                            x:Name="GenerateButton"
                            Margin="4,0,0,0"
                            HorizontalAlignment="Stretch"
                            Command="{x:Bind ViewModel.GenerateCommand}"
                            CornerRadius="4"
                            IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}"
                            ValidatingForm="{x:Bind ValidatingForm}">
                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <FontIcon Glyph="&#xE768;" />
                                <TextBlock x:Uid="MainGenerateTextBlock" />
                            </StackPanel>
                        </validation:ValidatingButton>

                        <CheckBox
                            x:Uid="MainShowGridCheckBox"
                            Margin="4,0,0,0"
                            IsChecked="{x:Bind ViewModel.IsAlignmentGridVisibile, Mode=TwoWay}" />

                        <Grid Margin="4,0,0,0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Button
                                x:Name="SaveButton"
                                Margin="0,0,4,0"
                                HorizontalAlignment="Stretch"
                                Command="{x:Bind ViewModel.SaveCommand}"
                                IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal" Spacing="4">
                                    <FontIcon Glyph="&#xE74E;" />
                                    <TextBlock x:Uid="MainSaveTextBlock" />
                                </StackPanel>
                            </Button>

                            <Button
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Stretch"
                                Command="{x:Bind ViewModel.ResetCommand}"
                                IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal" Spacing="4">
                                    <FontIcon Glyph="&#xE72C;" />
                                    <TextBlock x:Uid="MainResetTextBlock" />
                                </StackPanel>
                            </Button>
                        </Grid>

                        <Grid Margin="4,0,0,0">

                            <Button
                                Margin="0,0,4,0"
                                HorizontalAlignment="Stretch"
                                Command="{x:Bind ViewModel.SaveAsTextCommand}"
                                IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}"
                                Visibility="{x:Bind ViewModel.IsSaveAsTextButtonVisible, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal" Spacing="4">
                                    <FontIcon Glyph="&#xE74E;" />
                                    <TextBlock x:Uid="MainSaveAsTextTextBlock" />
                                </StackPanel>
                            </Button>
                        </Grid>

                        <muxc:ProgressRing
                            Width="100"
                            Height="100"
                            Margin="2"
                            Background="DarkGoldenrod"
                            Foreground="Firebrick"
                            IsActive="True"
                            IsEnabled="{x:Bind ViewModel.IsLoading, Mode=OneWay}"
                            IsIndeterminate="{x:Bind ViewModel.IsIndeterminate, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}"
                            Value="{x:Bind ViewModel.Progress, Mode=OneWay}" />
                        <!--  Style="{StaticResource YugenProgressRingStyle}"  -->
                    </StackPanel>
                </validation:ValidatingForm>

                <StackPanel
                    Grid.Row="1"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    Spacing="8">
                    <Button
                        x:Uid="MainWhatsNewTextBlock"
                        Width="72"
                        Height="36"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind ViewModel.WhatsNewCommand}"
                        IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                        <FontIcon Glyph="&#xE789;" />
                    </Button>

                    <Button
                        x:Uid="MainHelpTextBlock"
                        Width="72"
                        Height="36"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind ViewModel.HelpCommand}"
                        IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                        <FontIcon Glyph="&#xE897;" />
                    </Button>

                    <Button
                        x:Uid="MainSettingsTextBlock"
                        Width="72"
                        Height="36"
                        HorizontalAlignment="Stretch"
                        Command="{x:Bind ViewModel.SettingsCommand}"
                        IsEnabled="{x:Bind ViewModel.IsButtonEnabled, Mode=OneWay}">
                        <FontIcon Glyph="&#xE713;" />
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

        <muxc:TeachingTip
            x:Uid="MainTeachingTip"
            Title="{x:Bind ViewModel.TeachingTipTitle, Mode=OneWay}"
            ActionButtonCommand="{x:Bind ViewModel.TeachingTipActionButtonCommand}"
            IsOpen="{x:Bind ViewModel.IsTeachingTipOpen, Mode=OneWay}"
            Subtitle="{x:Bind ViewModel.TeachingTipSubTitle, Mode=OneWay}"
            Target="{x:Bind ViewModel.TeachingTipTarget, Mode=OneWay}">
            <interactivity:Interaction.Behaviors>
                <interactivity:EventTriggerBehavior EventName="Closed">
                    <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.TeachingTipClosedCommand}" />
                </interactivity:EventTriggerBehavior>
                <interactivity:EventTriggerBehavior EventName="Closing">
                    <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.TeachingTipClosingCommand}" />
                </interactivity:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </muxc:TeachingTip>
    </Grid>
</Page>