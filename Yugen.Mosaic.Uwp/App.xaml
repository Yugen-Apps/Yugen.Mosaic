<Application
    x:Class="Yugen.Mosaic.Uwp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Yugen.Toolkit.Uwp.Converters"
    xmlns:validation="using:Yugen.Toolkit.Standard.Validation">

    <Application.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>

                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" ControlsResourcesVersion="Version2" />

                <ResourceDictionary>

                    <SolidColorBrush x:Key="NullBackground" />

                    <Style x:Key="YugenProgressRingStyle" TargetType="ProgressRing">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="MinHeight" Value="20" />
                        <Setter Property="MinWidth" Value="20" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ProgressRing">
                                    <Grid
                                        x:Name="Ring"
                                        MaxWidth="{Binding TemplateSettings.MaxSideLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        MaxHeight="{Binding TemplateSettings.MaxSideLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        FlowDirection="LeftToRight"
                                        RenderTransformOrigin=".5,.5"
                                        Visibility="Collapsed">
                                        <Viewbox
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Stretch="UniformToFill">
                                            <Grid>
                                                <Canvas
                                                    x:Name="canvas"
                                                    Width="200"
                                                    Height="200"
                                                    RenderTransformOrigin="0.5,0.5">
                                                    <Canvas.RenderTransform>
                                                        <CompositeTransform />
                                                    </Canvas.RenderTransform>
                                                    <Path
                                                        x:Name="path"
                                                        Stroke="{ThemeResource SystemControlHighlightAccentBrush}"
                                                        StrokeThickness="10">
                                                        <Path.Data>
                                                            <PathGeometry>
                                                                <PathGeometry.Figures>
                                                                    <PathFigure StartPoint="100,0">
                                                                        <ArcSegment
                                                                            IsLargeArc="False"
                                                                            Point="200,100"
                                                                            Size="100,100"
                                                                            SweepDirection="Clockwise" />
                                                                    </PathFigure>
                                                                </PathGeometry.Figures>
                                                            </PathGeometry>
                                                        </Path.Data>
                                                    </Path>
                                                </Canvas>
                                                <Canvas
                                                    x:Name="canvas1"
                                                    Width="200"
                                                    Height="200"
                                                    RenderTransformOrigin="0.5,0.5">
                                                    <Canvas.RenderTransform>
                                                        <CompositeTransform />
                                                    </Canvas.RenderTransform>
                                                    <Path
                                                        Opacity="0.5"
                                                        Stroke="{ThemeResource SystemControlHighlightAccentBrush}"
                                                        StrokeThickness="10">
                                                        <Path.Data>
                                                            <PathGeometry>
                                                                <PathGeometry.Figures>
                                                                    <PathFigure StartPoint="100,25">
                                                                        <ArcSegment
                                                                            IsLargeArc="False"
                                                                            Point="175,100"
                                                                            Size="75,75"
                                                                            SweepDirection="Clockwise" />
                                                                    </PathFigure>
                                                                </PathGeometry.Figures>
                                                            </PathGeometry>
                                                        </Path.Data>
                                                    </Path>
                                                </Canvas>
                                            </Grid>
                                        </Viewbox>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SizeStates">
                                                <VisualState x:Name="Large" />
                                                <VisualState x:Name="Small" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="ActiveStates">
                                                <VisualState x:Name="Inactive" />
                                                <VisualState x:Name="Active">
                                                    <VisualState.Setters>
                                                        <Setter Target="Ring.(UIElement.Visibility)" Value="Visible" />
                                                    </VisualState.Setters>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="canvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="360" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="720" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="canvas1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="360" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="720" />
                                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1080" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="YugenHyperlinkButtonStyle" TargetType="HyperlinkButton">
                        <Setter Property="Foreground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
                    </Style>

                    <Style
                        x:Key="YugenBodyTextBlockStyle"
                        BasedOn="{StaticResource BodyTextBlockStyle}"
                        TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource AppForegroundBrush}" />
                    </Style>

                    <Style
                        x:Key="YugenCaptionTextBlockStyle"
                        BasedOn="{StaticResource CaptionTextBlockStyle}"
                        TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource AppForegroundBrush}" />
                    </Style>

                    <Style
                        x:Key="YugenSubtitleTextBlockStyle"
                        BasedOn="{StaticResource SubtitleTextBlockStyle}"
                        TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource AppForegroundBrush}" />
                    </Style>

                    <Style
                        x:Key="YugenTitleTextBlockStyle"
                        BasedOn="{StaticResource TitleTextBlockStyle}"
                        TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource AppForegroundBrush}" />
                    </Style>

                    <Style
                        x:Key="YugenBaseTextBlockStyle"
                        BasedOn="{StaticResource BaseTextBlockStyle}"
                        TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource AppForegroundBrush}" />
                    </Style>

                    <Style x:Key="YugenRadioButtonStyle" TargetType="RadioButton">
                        <Setter Property="Foreground" Value="{ThemeResource AppForegroundBrush}" />
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary.ThemeDictionaries>

                <ResourceDictionary x:Key="Light">

                    <SolidColorBrush x:Key="AppBackgroundBrush" Color="#FFF0F0F0" />

                    <SolidColorBrush x:Key="AppDeepBackgroundBrush" Color="#FFDBDBDB" />

                    <SolidColorBrush x:Key="AppForegroundBrush" Color="#FF535353" />

                    <SolidColorBrush x:Key="AppWorkBackgroundBrush" Color="#FFA6A6A6" />

                    <SolidColorBrush x:Key="AppWorkAreaBrush" Color="White" />

                    <SolidColorBrush x:Key="AppBorderBrush" Color="#FFC8C8C8" />

                    <SolidColorBrush x:Key="AppTransparentBackgroundBrush" Color="#7FFFFFFF" />

                    <!--  TitleBar themed resources  -->
                    <Color x:Key="TitleBarButtonForeground">#242424</Color>
                    <Color x:Key="TitleBarButtonHoverBackground">White</Color>
                    <Color x:Key="TitleBarButtonHoverForeground">#242424</Color>
                </ResourceDictionary>

                <ResourceDictionary x:Key="Dark">

                    <SolidColorBrush x:Key="AppBackgroundBrush" Color="#FF535353" />

                    <SolidColorBrush x:Key="AppDeepBackgroundBrush" Color="#FF424242" />

                    <SolidColorBrush x:Key="AppForegroundBrush" Color="#FFC2C2C2" />

                    <SolidColorBrush x:Key="AppWorkBackgroundBrush" Color="#FF606060" />

                    <SolidColorBrush x:Key="AppWorkAreaBrush" Color="#FFF0F0F0" />

                    <SolidColorBrush x:Key="AppBorderBrush" Color="#FF3F3F3F" />

                    <SolidColorBrush x:Key="AppTransparentBackgroundBrush" Color="#7F000000" />

                    <!--  TitleBar themed resources  -->
                    <Color x:Key="TitleBarButtonForeground">#dcdcdc</Color>
                    <Color x:Key="TitleBarButtonHoverBackground">#262626</Color>
                    <Color x:Key="TitleBarButtonHoverForeground">#dcdcdc</Color>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

            <validation:ValidationRules x:Key="IntValidationRule">
                <validation:ValidationRules.Rules>
                    <validation:RegexValidationRule RegexPattern="^[1-9]\d*$" />
                </validation:ValidationRules.Rules>
            </validation:ValidationRules>
        </ResourceDictionary>
    </Application.Resources>
</Application>